class Solution {
    public int[] solution(int[][] edges) {
        // 결과를 저장할 배열
        // answer[0] = 생성된 정점 번호
        // answer[1] = 도넛 모양 그래프 수
        // answer[2] = 막대 모양 그래프 수
        // answer[3] = 8자 모양 그래프 수
        int[] answer = new int[4];
        
        // 가장 큰 정점 번호 찾기
        // edges 배열을 순회하면서 가장 큰 정점 번호를 찾아 배열 크기 결정
        int maxNode = 0;
        for (int[] edge : edges) {
            maxNode = Math.max(maxNode, Math.max(edge[0], edge[1]));
        }
        
        // 각 정점의 진입차수와 진출차수를 저장할 2차원 배열
        // counts[i][0] = i번 정점의 진출차수 (해당 정점에서 나가는 간선의 수)
        // counts[i][1] = i번 정점의 진입차수 (해당 정점으로 들어오는 간선의 수)
        int[][] counts = new int[maxNode + 1][2];
        
        // 각 간선 정보를 순회하며 진입차수와 진출차수 계산
        for (int[] edge : edges) {
            counts[edge[0]][0]++; // 시작 정점의 진출차수 증가
            counts[edge[1]][1]++; // 도착 정점의 진입차수 증가
        }
        
        // 생성된 정점 찾기
        // 생성된 정점의 조건:
        // 1. 진출차수가 2 이상 (여러 그래프로 뻗어나가는 간선이 있음)
        // 2. 진입차수가 0 (들어오는 간선이 없음)
        for (int i = 1; i <= maxNode; i++) {
            if (counts[i][0] >= 2 && counts[i][1] == 0) {
                answer[0] = i; // 생성된 정점 번호 저장
                break;
            }
        }
        
        // 각 그래프 종류별 개수 계산
        for (int i = 1; i <= maxNode; i++) {
            // 생성된 정점은 건너뛰기
            if (i == answer[0]) continue;
            
            // 8자 모양 그래프 판별
            // 조건: 진출차수 = 2 && 진입차수 >= 2
            // 8자 모양의 교차점이 되는 정점의 특징
            if (counts[i][0] == 2 && counts[i][1] >= 2) {
                answer[3]++;
            }
            // 막대 모양 그래프 판별
            // 조건: 진출차수 = 0 && 진입차수 > 0
            // 막대 모양의 끝점이 되는 정점의 특징
            else if (counts[i][0] == 0 && counts[i][1] > 0) {
                answer[2]++;
            }
        }
        
        // 도넛 모양 그래프 수 계산
        // 1. 생성된 정점의 진출차수 = 전체 그래프 수
        // 2. 도넛 모양 그래프 수 = 전체 그래프 수 - (막대 모양 + 8자 모양)
        int totalGraphs = counts[answer[0]][0];  // 전체 그래프 수
        answer[1] = totalGraphs - (answer[2] + answer[3]);  // 도넛 모양 그래프 수
        
        return answer;
    }
    
    /* 각 그래프 유형별 특징 정리
     * 1. 도넛 모양 그래프
     *    - 모든 정점의 진입차수 = 1
     *    - 모든 정점의 진출차수 = 1
     *    - n개의 정점과 n개의 간선으로 구성
     * 
     * 2. 막대 모양 그래프
     *    - 시작 정점: 진출차수 = 1, 진입차수 = 0
     *    - 중간 정점: 진출차수 = 1, 진입차수 = 1
     *    - 끝 정점: 진출차수 = 0, 진입차수 = 1
     *    - n개의 정점과 n-1개의 간선으로 구성
     * 
     * 3. 8자 모양 그래프
     *    - 교차점: 진출차수 = 2, 진입차수 >= 2
     *    - 그 외 정점: 진출차수 = 1, 진입차수 = 1
     *    - 2n+1개의 정점과 2n+2개의 간선으로 구성
     * 
     * 4. 생성된 정점
     *    - 진입차수 = 0 (들어오는 간선 없음)
     *    - 진출차수 >= 2 (여러 그래프로 나가는 간선 있음)
     */
}