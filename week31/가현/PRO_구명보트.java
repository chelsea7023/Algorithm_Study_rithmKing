// 문제 요약

// 무인도에 갇힌 사람들을 최소한의 구명보트로 구출해야 한다.

// 보트 규칙:
// 한 보트에는 최대 2명까지 탑승 가능
// 두 사람의 무게 합이 limit을 초과하면 함께 탈 수 없음.

// 입력:
// people[]: 사람들의 몸무게 배열
// limit: 보트의 최대 무게 제한

// 출력:
// 모든 사람을 구출하기 위한 최소한의 보트 개수



// 알고리즘 전개

// 1. 입력값 정렬
// people 배열을 오름차순으로 정렬한다.
// 가장 가벼운 사람과 가장 무거운 사람을 함께 태울 수 있는지를 확인하기 위해 필요하다.

// 2. 투 포인터 초기화
// left 포인터: 가장 가벼운 사람을 가리키는 인덱스
// right 포인터: 가장 무거운 사람을 가리키는 인덱스
// boatCount: 필요한 보트 개수를 저장할 변수

// 3. 탐색 시작 - 두 사람이 같이 탈 수 있는지 확인
// while (left <= right) 조건을 만족하는 동안 반복한다.
// people[left] + people[right] <= limit인 경우, 두 사람이 함께 보트에 탈 수 있다.
// 두 포인터를 각각 left++, right--로 이동하고 boatCount++ 증가
// people[left] + people[right] > limit인 경우, 무거운 사람(people[right])만 혼자 태운다.
// right-- 만 이동하고 boatCount++ 증가

// 4. 탐색 종료 및 결과 반환
// left가 right를 초과하면 반복문을 종료한다.
// boatCount를 반환한다.